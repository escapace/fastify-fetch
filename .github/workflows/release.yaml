name: release

on:
  push:
    tags:
      - 'v*'

env:
  # 7 GiB by default on GitHub, setting to 6 GiB
  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
  NODE_OPTIONS: --max-old-space-size=6144

jobs:
  context:
    uses: ./.github/workflows/workflow-call-context.yaml
  ci:
    if: needs.context.outputs.environment == 'production'
    uses: ./.github/workflows/workflow-call-ci.yaml
    needs:
      - context
    with:
      ref: ${{ needs.context.outputs.ref }}
      node-version: ${{ needs.context.outputs.node-version }}
      pnpm-version: ${{ needs.context.outputs.pnpm-version }}
      upload-context: true
  release:
    if: needs.context.outputs.environment == 'production'
    runs-on: ubuntu-latest
    needs:
      - context
      - ci
    permissions:
      id-token: write
      contents: write
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.context.outputs.ref }}
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.context.outputs.node-version }}
      - name: install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ needs.context.outputs.pnpm-version }}
          run_install: false
      - name: get pnpm store directory
        id: pnpm-store-path
        run: echo "value=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store-path.outputs.value }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: restore lib cache
        uses: actions/download-artifact@v3
        with:
          name: context
          path: lib
      - name: publish
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
            //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
            @escapace:registry=https://npm.pkg.github.com
            provenance=true
            always-auth=true
          EOF

          pnpm install

          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
            //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
            @escapace:registry=https://registry.npmjs.org
            provenance=true
            always-auth=true
          EOF

          pnpm run release ${{ needs.context.outputs.version }}
        env:
          NPM_CONFIG_PROVENANCE: true
      - name: github release
        run: |
          pnpm exec changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
